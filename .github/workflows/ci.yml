name: Build and test flake outputs
on:
  push:
  workflow_call:
    inputs:
      branch:
        description: Branch name to build on
        default: master
        required: false
        type: string

jobs:
  nix-aarch64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        nix-command:
          - build .#nixOnDroidConfigurations.oneplus5.activationPackage --impure
          - build .#nixosConfigurations.xenon.config.system.build.toplevel
          - eval .#apps.aarch64-linux.format.program
          - eval .#apps.aarch64-linux.setup.program

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - name: Install nix
        uses: cachix/install-nix-action@v16

      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: gerschtli
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

      - name: Build command
        #uses: uraimo/run-on-arch-action@v2.1.1
        uses: Gerschtli/run-on-arch-action@groups
        with:
          arch: aarch64
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: --volume /nix:/nix
          install: apk --no-cache add curl git xz
          run: |
            set -euo pipefail

            mkdir -p /etc/nix
            echo "max-jobs = auto" >> /etc/nix/nix.conf
            echo "trusted-users = root" >> /etc/nix/nix.conf
            echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
            echo "build-users-group =" >> /etc/nix/nix.conf
            export USER=root

            echo "::group::Install nix"
            sh <(curl -L https://nixos.org/nix/install) --no-channel-add
            . ${HOME}/.nix-profile/etc/profile.d/nix.sh

            echo "::group::Setup cachix"
            nix-env --quiet -j8 -iA cachix -f https://cachix.org/api/v1/install
            cachix use gerschtli
            cachix use nix-on-droid

            echo "::group::Build command"
            nix \
              --log-format bar-with-logs \
              --option keep-going true \
              --show-trace \
              ${{ matrix.nix-command }}

  nix-x86:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        nix-command:
          - flake check
          - build .#homeConfigurations."tobias@gamer".activationPackage
          - build .#homeConfigurations."tobhap@M386".activationPackage
          - build .#nixosConfigurations.krypton.config.system.build.toplevel
          - build .#nixosConfigurations.neon.config.system.build.toplevel
          - eval .#apps.x86_64-linux.format.program
          - eval .#apps.x86_64-linux.setup.program
          - develop .#jdk8 --profile profile
          - develop .#jdk11 --profile profile
          - develop .#jdk15 --profile profile
          - develop .#jdk17 --profile profile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - name: Install nix
        uses: cachix/install-nix-action@v16

      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: gerschtli
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

      - name: Build command
        run: |
          nix \
            --log-format bar-with-logs \
            --option keep-going true \
            --show-trace \
            ${{ matrix.nix-command }}

# vim: set sw=2:

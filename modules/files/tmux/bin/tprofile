#!/usr/bin/env bash

PATH_TO_CONF_DIR="${1}"
shift
CONF_NAME="${1}"
shift

while true; do
  case "${1}" in
    --only-fetch ) ONLY_FETCH=true; shift ;;
    * ) break ;;
  esac
done

CONF="${PATH_TO_CONF_DIR}/${CONF_NAME}.sh"

_check_requirements() {
    [[ -z "${TMUX}" ]] && echo "command needs to be executed in tmux session" && exit 1

    if [[ -r "${CONF}" ]]; then
        source "${CONF}"
    elif [[ -d "${HOME}/projects/${CONF_NAME}" ]]; then
        ROOT="${HOME}/projects/${CONF_NAME}"
        PRESET="git-single"
    elif [[ -d "${HOME}/projects/pveu/${CONF_NAME}" ]]; then
        ROOT="${HOME}/projects/pveu/${CONF_NAME}"
        PRESET="git-single"
    else
        echo "neither ${CONF} nor projects named ${CONF_NAME} do not exist"
        exit 2
    fi
}

_process_profile() {
    ROOT="${ROOT:-${HOME}}"

    [[ ! -r "${ROOT}" ]] && echo "directory is not readable" && exit 1

    CMD_PRIMARY="${CMD_PRIMARY:-}"
    SIDE_CMDS=("${SIDE_CMDS[@]}")

    if [[ ! -z "${ONLY_FETCH}" ]]; then
        PRESET="git-single"
    fi

    case "${PRESET}" in
        git-single )
            CMD_PRIMARY="git fm"
            CMD_SECONDARY=""
            SIDE_CMDS=()
            ;;
        git-vagrant )
            CMD_PRIMARY="git fm"
            CMD_SECONDARY=""
            SIDE_CMDS=("cd vagrant:vup:vauto")
            ;;
    esac

    if [[ -f "${ROOT}/.envrc" && -f "${HOME}/.refresh-shell" ]]; then
        NIX_CMD="source ${HOME}/.refresh-shell"
    fi
}

_send_commands() {
    local index="${1}"
    local commands="${2}"

    tmux send-keys -t :.$index "cd ${ROOT}" C-m "${NIX_CMD}" C-m "clear" C-m

    if [[ ! -z "${commands}" ]]; then
        local IFS=":"
        for cmd in ${commands}; do
            tmux send-keys -t :.$index "${cmd}" C-m
        done
    fi
}

_arrange_panes() {
    [ $(tmux list-panes | wc -l) != 1 ] && tmux kill-pane -a -t $TMUX_PANE

    local index=1
    _send_commands $index "${CMD_PRIMARY}"
    for cmds in "${SIDE_CMDS[@]}"; do
        index=$(($index + 1))
        tmux split-window
        _send_commands $index "${cmds}"
    done

    tmux select-layout main-horizontal

    if [[ ! -z "${CMD_SECONDARY}" ]]; then
        tmux select-pane -t :.1
        tmux split-window -h
        _send_commands 2 "${CMD_SECONDARY}"
    fi

    tmux select-pane -t :.1
    tmux rename-window "${CONF_NAME}"
}

_check_requirements
_process_profile
_arrange_panes
